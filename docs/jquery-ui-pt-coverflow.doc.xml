<Documentation Component="jQuery UI PT Coverflow">
    <Overview>
        <![CDATA[ 
        <p>Makes an iTunes style coverflow from a selected collection of images in the DOM or from an AJAX call.</p>
        <p>
            When specifying images in the DOM, any images (img tags) found inside the selected element will be used.
            Additional data attributes for title, subtitle, and category can be optionally added to enhance the coverflow.
            Covers in the the coverflow appear in the same order as they were in the source collection.
            In the most simple case, the markup for a coverflow looks like:
        </p>
        <pre>
            &lt;div id="coverflow"&gt;
                &lt;img src="#1" alt="Cover #1" data-title="" data-subtitle="" data-category="" /&gt;
                &lt;img src="#2" alt="Cover #2" data-title="" data-subtitle="" data-category="" /&gt;
                &lt;img src="#3" alt="Cover #3" data-title="" data-subtitle="" data-category="" /&gt;
            &lt;/div&gt;
        </pre>
        <p>In order to transform the image collection in the DOM into a coverflow, add the following JavaScript.</p>
        <pre>
            jQuery(document).ready(function(){
                $("#coverflow").coverflow();
            });
        </pre>
        <p>
            Images can also be set programatically prior to initialization of the coverflow using the 'images' option.
            The objects provided to this method must have the property 'src'. Optional properties of 'title', 'subtitle', 
            and 'category' can also be supplied. After initialization, images can be added programatically via the
            'addImage' API method. An example of using options to set the images:
        </p>
        <pre>
            jQuery(document).ready(function(){
                $("#coverflow").coverflow({
                    autoplay: {
                        enabled: true
                    },
                    images: [
                        { src: "#1", title: "Cover #1", subtitle: "", category: "" },
                        { src: "#2", title: "Cover #2", subtitle: "", category: "" },
                        { src: "#3", title: "Cover #3", subtitle: "", category: "" }
                    ]
                });
            });
        </pre>
        ]]>
    </Overview>
    <Example>
        <![CDATA[ 
        <div id="controls">
            <img id="play" alt="Play" src="http://planettelexinc.github.com/jquery-ui-pt-coverflow/images/controls/play.png" title="Play" />
            <img id="pause" alt="Pause" src="http://planettelexinc.github.com/jquery-ui-pt-coverflow/images/controls/pause.png" title="Pause" class="hidden" />
            <a id="previousCategory" title="Previous Category">&lsaquo;&lsaquo;</a>
            <a id="nextCategory" title="Next Category">&rsaquo;&rsaquo;</a>
        </div>
        <div id="coverflow">
            <img src="http://planettelexinc.github.com/jquery-ui-pt-coverflow/images/albertacross-thebrokensideoftime.jpg" alt="Alberta Cross, Broken Side of Time" data-subtitle="Alberta Cross" data-title="Broken Side of Time" data-category="Rock" />
            <img src="http://planettelexinc.github.com/jquery-ui-pt-coverflow/images/beatles-revolver.jpg" alt="The Beatles, Revolver" data-subtitle="The Beatles" data-title="Revolver" data-category="Rock" />
            <img src="http://planettelexinc.github.com/jquery-ui-pt-coverflow/images/cream-disraeligears.jpg" alt="Cream, Disraeli Gears" data-subtitle="Cream" data-title="Disraeli Gears" data-category="Rock" />
            <img src="http://planettelexinc.github.com/jquery-ui-pt-coverflow/images/muse-the-resistance.jpg" alt="Muse, The Resistance" data-subtitle="Muse" data-title="The Resistance" data-category="Rock" />
            <img src="http://planettelexinc.github.com/jquery-ui-pt-coverflow/images/nirvana-inutero.jpg" alt="Nirvana, In Utero" data-subtitle="Nirvana" data-title="In Utero" data-category="Rock" />
            <img src="http://planettelexinc.github.com/jquery-ui-pt-coverflow/images/beastieboys-illcommunication.jpg" alt="Beastie Boys, Ill Communication" data-subtitle="Beastie Boys" data-title="Ill Communication" data-category="Hip-Hop" />
            <img src="http://planettelexinc.github.com/jquery-ui-pt-coverflow/images/blackalicious-blazingarrow.jpg" alt="Blackalicious, Blazing Arrow" data-subtitle="Blackalicious" data-title="Blazing Arrow" data-category="Hip-Hop" />
            <img src="http://planettelexinc.github.com/jquery-ui-pt-coverflow/images/cypresshill-iv.jpg" alt="Cypress Hill, IV" data-subtitle="Cypress Hill" data-title="IV" data-category="Hip-Hop" />
            <img src="http://planettelexinc.github.com/jquery-ui-pt-coverflow/images/outkast-atliens.jpg" alt="Outkast, ATLiens" data-subtitle="Outkast" data-title="ATLiens" data-category="Hip-Hop" />
            <img src="http://planettelexinc.github.com/jquery-ui-pt-coverflow/images/theroots-thingsfallapart.jpg" alt="The Roots, Things Fall Apart" data-subtitle="The Roots" data-title="Things Fall Apart" data-category="Hip-Hop" />
            <img src="http://planettelexinc.github.com/jquery-ui-pt-coverflow/images/beck-midnightvultures.jpg" alt="Beck, Midnight Vultures" data-subtitle="Beck" data-title="Midnight Vultures" data-category="Alternative" />
            <img src="http://planettelexinc.github.com/jquery-ui-pt-coverflow/images/bjork-post.jpg" alt="Bjork, Post" data-subtitle="Bjork" data-title="Post" data-category="Alternative" />
            <img src="http://planettelexinc.github.com/jquery-ui-pt-coverflow/images/cornershop-wheniwasbornfortheseventhtime.jpg" alt="Cornershop, When I Was Born for the Seventh Time" data-subtitle="Cornershop" data-title="When I Was Born for the Seventh Time" data-category="Alternative" />
            <img src="http://planettelexinc.github.com/jquery-ui-pt-coverflow/images/depechemmode-violator.jpg" alt="Depeche Mode, Violator" data-subtitle="Depeche Mode" data-title="Violator" data-category="Alternative" />
            <img src="http://planettelexinc.github.com/jquery-ui-pt-coverflow/images/gorillaz-plasticbeach.jpg" alt="Gorillaz, Plastic Beach" data-subtitle="Gorillaz" data-title="Plastic Beach" data-category="Alternative" />
            <img src="http://planettelexinc.github.com/jquery-ui-pt-coverflow/images/radiohead-the-king-of-limbs.jpg" alt="Radiohead, The King of Limbs" data-subtitle="Radiohead" data-title="The King of Limbs" data-category="Alternative" />
            <img src="http://planettelexinc.github.com/jquery-ui-pt-coverflow/images/air-thevirginsuisides.jpg" alt="Air, The Virgin Suicides" data-subtitle="Air" data-title="The Virgin Suicides" data-category="Electronica" />
            <img src="http://planettelexinc.github.com/jquery-ui-pt-coverflow/images/bonobo-blacksands.jpg" alt="Bonobo, Black Sands" data-subtitle="Bonobo" data-title="Black Sands" data-category="Electronica" />
            <img src="http://planettelexinc.github.com/jquery-ui-pt-coverflow/images/chemicalbrothers-digyourownhole.jpg" alt="Chemical Brothers, Dig Your Own Hole" data-subtitle="Chemical Brothers" data-title="Dig Your Own Hole" data-category="Electronica" />
            <img src="http://planettelexinc.github.com/jquery-ui-pt-coverflow/images/cut-copy-zonoscope.jpg" alt="Cut Copy, Zonoscope" data-subtitle="Cut Copy" data-title="Zonoscope" data-category="Electronica" />
            <a id="previous" title="Previous Cover">&lsaquo;</a>
            <a id="next" title="Next Cover">&rsaquo;</a>
        </div>
        <script type="text/javascript">
            $(function () {
                var $coverflow = $("#coverflow").coverflow({ categories: { enabled: true } });
                $("#play").click(function () {
                    $coverflow.coverflow("play");
                    $(this).hide();
                    $("#pause").show();
                });
                $("#pause").click(function () {
                    $coverflow.coverflow("pause");
                    $(this).hide();
                    $("#play").show();
                });
                $("#previous").click(function () {
                    $coverflow.coverflow("prevCover");
                });
                $("#next").click(function () {
                    $coverflow.coverflow("nextCover");
                });
                $("#previousCategory").click(function () {
                    $coverflow.coverflow("prevCategory");
                });
                $("#nextCategory").click(function () {
                    $coverflow.coverflow("nextCategory");
                });
            });
        </script>
        ]]>
    </Example>
    <Options>
        <Section Name="General">
            <Option Name="width" Type="Number" Default="null">
                <Desc>The width of the coverflow in pixels. If not set this value will be inferred from the coverflow's container.</Desc>
                <Example>
                    <![CDATA[ 
                    <p>Initialize a coverflow specifying its width using options.</p>
                    <pre>
                        var myCoverflow = $(".selector").coverflow({ width: 400 });
                    </pre>
                    <p>Get the coverflow width option after initialization.</p>
                    <pre>
                        var coverflowWidth = myCoverflow.coverflow("option", "width");
                    </pre>
                    ]]>
                </Example>
            </Option>
            <Option Name="height" Type="Number" Default="null">
                <Desc>The height of the coverflow in pixels. If not set this value will be inferred from the coverflow's container.</Desc>
                <Example>
                    <![CDATA[ 
                    <p>Initialize a coverflow specifying its height using options.</p>
                    <pre>
                        var myCoverflow = $(".selector").coverflow({ height: 400 });
                    </pre>
                    <p>Get the coverflow height option after initialization.</p>
                    <pre>
                        var coverflowHeight = myCoverflow.coverflow("option", "height");
                    </pre>
                    ]]>
                </Example>
            </Option>
            <Option Name="selectedIndex" Type="Number" Default="0">
                <Desc>A coverflow contains a zero based array of covers. When the coverflow loads the selected index is the value in this array that is positioned in the center. For example if you had ten covers and set selected value to 4, the fifth cover in the set will be in the center with covers 0-3 to its left, and 5-9 to its right.</Desc>
                <Example>
                    <![CDATA[ 
                    <p>Initialize a coverflow specifying its selected index using options.</p>
                    <pre>
                        var myCoverflow = $(".selector").coverflow({ selectedIndex: 4 });
                    </pre>
                    <p>Get the coverflow selected index after initialization.</p>
                    <pre>
                        var selectedIndex = myCoverflow.coverflow("option", "selectedIndex");
                    </pre>
                    ]]>
                </Example>
            </Option>
            <Option Name="images" Type="Array&lt;Object&gt;" Default="[]">
                <Desc>An alternate way to specify the coverflow images. In the case that images are both in the DOM and specified here, Coverflow will use the union of both sets. Each object in this array must have an "src" property specifying the image source, and can optionally include "title", "subtitle", and "category" properties.</Desc>
                <Example>
                    <![CDATA[
                    <p>Initialize a coverflow specifying images using options.</p>
                    <pre>
                        var myCoverflow = $(".selector").coverflow({
                            images: [
                                { src: "#1", title: "Cover #1", subtitle: "", category: "" },
                                { src: "#2", title: "Cover #2", subtitle: "", category: "" },
                                { src: "#3", title: "Cover #3", subtitle: "", category: "" }
                            ]
                        });
                    </pre>
                    <p>Get the images after initialization.</p>
                    <pre>
                        var images = myCoverflow.coverflow("option", "images");
                    </pre>
                    ]]>
                </Example>
            </Option>
            <Section Name="Cover">
                <Option Name="width" Type="Number" Default="300">
                    <Desc>The width of the center "selected" cover in pixels.</Desc>
                    <Example>
                        <![CDATA[ 
                        <p>Initialize a coverflow specifying the cover width using options.</p>
                        <pre>
                            var myCoverflow = $(".selector").coverflow({ cover: { width: 300 } });
                        </pre>
                        <p>Get the cover width option after initialization.</p>
                        <pre>
                            var coverWidth = myCoverflow.coverflow("option", "cover").width;
                        </pre>
                        ]]>
                    </Example>
                </Option>
                <Option Name="height" Type="Number" Default="300">
                    <Desc>The height of the center "selected" cover in pixels.</Desc>
                    <Example>
                        <![CDATA[ 
                        <p>Initialize a coverflow specifying the cover height using options.</p>
                        <pre>
                            var myCoverflow = $(".selector").coverflow({ cover: { height: 300 } });
                        </pre>
                        <p>Get the cover height option after initialization.</p>
                        <pre>
                            var coverHeight = myCoverflow.coverflow("option", "cover").height;
                        </pre>
                        ]]>
                    </Example>
                </Option>
                <Section Name="Animation">
                    <Option Name="radius" Type="Number" Default="20">
                        <Desc>The number of covers that animate on each side of the selected cover each time the select cover changes. For best performance make this just slightly larger than the number of covers visible at any one time.</Desc>
                        <Example>
                            <![CDATA[ 
                            <p>Initialize a coverflow specifying the cover animation radius using options.</p>
                            <pre>
                                var myCoverflow = $(".selector").coverflow({ cover: { animation: { radius: 20 } } });
                            </pre>
                            <p>Get the cover animation radius option after initialization.</p>
                            <pre>
                                var coverAnimationRadius = myCoverflow.coverflow("option", "cover").animation.radius;
                            </pre>
                            ]]>
                        </Example>
                    </Option>
                    <Section Name="Perspective">
                        <Option Name="duration" Type="Number" Default="80">
                            <Desc>The number of milliseconds it takes to animate from a perspective skew to the frontal view. This happens whenever a cover is flipped either to or from the center "selected" area.</Desc>
                            <Example>
                                <![CDATA[ 
                                <p>Initialize a coverflow specifying the covers' perspective animation duration using options.</p>
                                <pre>
                                    var myCoverflow = $(".selector").coverflow({ cover: { animation: { perspective: { duration: 500 } } } });
                                </pre>
                                <p>Get the covers' perspective animation duration option after initialization.</p>
                                <pre>
                                    var coverPerspectiveAnimationDuration = myCoverflow.coverflow("option", "cover").animation.perspective.duration;
                                </pre>
                                ]]>
                            </Example>
                        </Option>
                        <Option Name="inner" Type="Number" Default="120">
                            <Desc>This value is a percentage of the duration. The two covers to the immediate left and right of the center "selected" cover are deemed the "inner" background covers. When performing the skew animation it is visually appealing to animate these slightly slower than the time it takes an "outer" background cover to animate to center perspective. Remember, the longer the duration, the slower the animation appears. So an inner value of 100 would animate the same speed as specified by the duration option. 120 will make it slower, and 80 would make it faster.</Desc>
                            <Example>
                                <![CDATA[ 
                                <p>Initialize a coverflow specifying the covers' perspective animation duration using options.</p>
                                <pre>
                                    var myCoverflow = $(".selector").coverflow({ cover: { animation: { perspective: { inner: 200 } } } });
                                </pre>
                                <p>Get the covers' perspective animation duration option after initialization.</p>
                                <pre>
                                    var innerCoverPerspectiveAnimationDurationOffset = myCoverflow.coverflow("option", "cover").animation.perspective.inner;
                                </pre>
                                ]]>
                            </Example>
                        </Option>
                    </Section>
                </Section>
                <Section Name="Background">
                    <Option Name="size" Type="Number" Default="90">
                        <Desc>All the covers in the set that are not the center "selected" cover are referred to as "background" covers. To give the illusion that they are behind the selected cover, they should be smaller. This value is a percentage of the selected cover's size as determined by the cover width and cover height properties.</Desc>
                        <Example>
                            <![CDATA[ 
                            <p>Initialize a coverflow specifying the background cover size using options.</p>
                            <pre>
                                var myCoverflow = $(".selector").coverflow({ cover: { background: { size: 90 } } });
                            </pre>
                            <p>Get the background cover size option after initialization.</p>
                            <pre>
                                var coverBackgroundSize = myCoverflow.coverflow("option", "cover").background.size;
                            </pre>
                            ]]>
                        </Example>
                    </Option>
                    <Option Name="style" Type="String" Default="Inherits from container">
                        <Desc>Sets the CSS style of the background, which could be a color or the URL of a background image. If not set, the style of the container will be used for a background. This property is especially important when using reflections, since each reflected cover needs a background to mask other covers' reflections.</Desc>
                        <Example>
                            <![CDATA[ 
                            <p>Initialize a coverflow specifying the background style of each cover using options.</p>
                            <pre>
                                var myCoverflow = $(".selector").coverflow({ cover: { background: { style: "url(Path/To/My/Image.png)" } } });
                            </pre>
                            <p>Get the background style option after initialization.</p>
                            <pre>
                                var coverBackgroundStyle = myCoverflow.coverflow("option", "cover").background.style;
                            </pre>
                            ]]>
                        </Example>
                    </Option>
                    <Section Name="Overlap">
                        <Option Name="inner" Type="Number" Default="20">
                            <Desc>The two covers to the immediate left and right of the center "selected" cover are the "inner" background covers. This number specifies the percentage that they overlap the selected cover.  A value of 100 hides them completely since they are 100% covered. A negative value can create space between the selected cover and the inner background covers.</Desc>
                            <Example>
                                <![CDATA[ 
                                <p>Initialize a coverflow specifying the inner background cover overlap percentage using options.</p>
                                <pre>
                                    var myCoverflow = $(".selector").coverflow({ cover: { background: { overlap: { inner: 20 } } } });
                                </pre>
                                <p>Get the inner background cover overlap percentage option after initialization.</p>
                                <pre>
                                    var coverBackgroundOverlapInner = myCoverflow.coverflow("option", "cover").background.overlap.inner;
                                </pre>
                                ]]>
                            </Example>
                        </Option>
                        <Option Name="outer" Type="Number" Default="80">
                            <Desc>All the covers that are not the center "selected" cover or the two covers to the immediate left and right of it are referred to as the "outer" background covers. This number specifies the percentage they are overlapped by an adjoining cover. A value of 100 hides them completely, since they are 100% covered. A negative value can create space between them and adjoining background covers.</Desc>
                            <Example>
                                <![CDATA[ 
                                <p>Initialize a coverflow specifying the outer background cover overlap percentage using options.</p>
                                <pre>
                                    var myCoverflow = $(".selector").coverflow({ cover: { background: { overlap: { outer: 80 } } } });
                                </pre>
                                <p>Get the outer background cover overlap percentage option after initialization.</p>
                                <pre>
                                    var coverBackgroundOverlapOuter = myCoverflow.coverflow("option", "cover").background.overlap.outer;
                                </pre>
                                ]]>
                            </Example>
                        </Option>
                    </Section>
                </Section>
                <Section Name="Perspective">
                    <Option Name="enabled" Type="Boolean" Default="true">
                        <Desc>Turns the perspective transformations on and off. The covers' perspectives depend on the HTML5 canvas element. Browsers that don't support this, like Internet Explorer 7 and 8, will never show perspective transformations regardless of this value.</Desc>
                        <Example>
                            <![CDATA[ 
                            <p>Initialize a coverflow specifying whether to use perspective transformations using options.</p>
                            <pre>
                                var myCoverflow = $(".selector").coverflow({ cover: { perspective: { enabled: false } } });
                            </pre>
                            <p>Get whether to use perspective transformations after initialization.</p>
                            <pre>
                                var coverPerspectiveEnabled = myCoverflow.coverflow("option", "cover").perspective.enabled;
                            </pre>
                            ]]>
                        </Example>
                    </Option>
                    <Option Name="angle" Type="Number" Default="12">
                        <Desc>The angle, in degrees, that defines the perspective skew. These degrees are measured two dimensionally from the top plane defined by the cover's top. A value of 45 degrees will create triangles of the perspective covers, while values over this cause the perspective to "fold in" on itself- not good for realism, but can create some psychedelic effects.</Desc>
                        <Example>
                            <![CDATA[ 
                            <p>Initialize a coverflow specifying the perspective transformation angle using options.</p>
                            <pre>
                                var myCoverflow = $(".selector").coverflow({ cover: { perspective: { angle: 80 } } });
                            </pre>
                            <p>Get the perspective transformation angle after initialization.</p>
                            <pre>
                                var coverPerspectiveAngle = myCoverflow.coverflow("option", "cover").perspective.angle;
                            </pre>
                            ]]>
                        </Example>
                    </Option>
                </Section>
                <Section Name="Reflection">
                    <Option Name="enabled" Type="Boolean" Default="true">
                        <Desc>Turns the cover reflections on and off. The covers' perspectives depend on the HTML5 canvas element. Browsers that don't support this, like Internet Explorer 7 and 8, will never show cover reflections regardless of this value.</Desc>
                        <Example>
                            <![CDATA[ 
                            <p>Initialize a coverflow specifying whether to use cover reflections using options.</p>
                            <pre>
                                var myCoverflow = $(".selector").coverflow({ cover: { reflection: { enabled: false } } });
                            </pre>
                            <p>Get whether to use cover reflections after initialization.</p>
                            <pre>
                                var coverReflectionEnabled = myCoverflow.coverflow("option", "cover").reflection.enabled;
                            </pre>
                            ]]>
                        </Example>
                    </Option>
                    <Option Name="length" Type="Number" Default="80">
                        <Desc>The length of the reflection as a percentage of the cover. All reflections fade to 100% transparency, this value specifies how much of the image is displayed before that happens. A reflection value of 100 will show nearly the whole cover, while a value of 0 will hide the reflection completely.</Desc>
                        <Example>
                            <![CDATA[ 
                            <p>Initialize a coverflow specifying reflection length using options.</p>
                            <pre>
                                var myCoverflow = $(".selector").coverflow({ cover: { reflection: { length: 20 } } });
                            </pre>
                            <p>Get reflection length option after initialization.</p>
                            <pre>
                                var coverReflectionLength = myCoverflow.coverflow("option", "cover").reflection.length;
                            </pre>
                            ]]>
                        </Example>
                    </Option>
                    <Option Name="initialOpacity" Type="Number" Default="30">
                        <Desc>A number between 0 and 100 specifying the initial opacity of a cover's reflection (i.e. the part closest to the cover). A value of 0 is completely transparent, while a value of 100 is completely opaque.</Desc>
                        <Example>
                            <![CDATA[ 
                            <p>Initialize a coverflow specifying reflection initial opacity using options.</p>
                            <pre>
                                var myCoverflow = $(".selector").coverflow({ cover: { reflection: { initialOpacity: 90 } } });
                            </pre>
                            <p>Get reflection initial opacity option after initialization.</p>
                            <pre>
                                var coverReflectionInitialOpacity = myCoverflow.coverflow("option", "cover").reflection.initialOpacity;
                            </pre>
                            ]]>
                        </Example>
                    </Option>
                </Section>
                <Section Name="Title">
                    <Option Name="enabled" Type="Boolean" Default="true">
                        <Desc>Turns the cover titles (title and subtitle) on and off.</Desc>
                        <Example>
                            <![CDATA[ 
                            <p>Initialize a coverflow specifying whether to use cover titles using options.</p>
                            <pre>
                                var myCoverflow = $(".selector").coverflow({ cover: { title: { enabled: false } } });
                            </pre>
                            <p>Get whether to use cover titles after initialization.</p>
                            <pre>
                                var coverTitleEnabled = myCoverflow.coverflow("option", "cover").title.enabled;
                            </pre>
                            ]]>
                        </Example>
                    </Option>
                </Section>
            </Section>
            <Section Name="Categories">
                <Option Name="enabled" Type="Boolean" Default="false">
                    <Desc>Turns categories on and off. Categories can be specified for an image in the DOM by adding the "data-category" attribute to a source image. If setting programatically using the "images" option, the source object should have a "category" property. Categories are ordered in the same order they  appear in the DOM.</Desc>
                    <Example>
                        <![CDATA[ 
                        <p>Initialize a coverflow specifying whether to use categories using options.</p>
                        <pre>
                            var myCoverflow = $(".selector").coverflow({ categories: { enabled: true } });
                        </pre>
                        <p>Get whether to use categories after initialization.</p>
                        <pre>
                            var categoriesEnabled = myCoverflow.coverflow("option", "categories").enabled;
                        </pre>
                        ]]>
                    </Example>
                </Option>
                <Option Name="defaultCategory" Type="String" Default="'Unknown'">
                    <Desc>The default category to assign covers to if not specified by the data source.</Desc>
                    <Example>
                        <![CDATA[ 
                        <p>Initialize a coverflow specifying the default category using options.</p>
                        <pre>
                            var myCoverflow = $(".selector").coverflow({ categories: { enabled: true, defaultCategory: "My Default Category" } });
                        </pre>
                        <p>Get the default category option after initialization.</p>
                        <pre>
                            var categoriesDefault = myCoverflow.coverflow("option", "categories").defaultCategory;
                        </pre>
                        ]]>
                    </Example>
                </Option>
                <Option Name="selectedCategory" Type="String" Default="null">
                    <Desc>Specifies the first category to display. If not specified, the first category defined in the DOM will be the first selected category.</Desc>
                    <Example>
                        <![CDATA[ 
                        <p>Initialize a coverflow specifying the selected category using options.</p>
                        <pre>
                            var myCoverflow = $(".selector").coverflow({ categories: { enabled: true, selectedCategory: "My Category" } });
                        </pre>
                        <p>Get the selected category option after initialization.</p>
                        <pre>
                            var categoriesSelected = myCoverflow.coverflow("option", "categories").selectedCategory;
                        </pre>
                        ]]>
                    </Example>
                </Option>
                <Option Name="renderTitles" Type="Boolean" Default="true">
                    <Desc>Specifies whether to render a list of category titles that can be used to navigate through the coverflow categories.</Desc>
                    <Example>
                        <![CDATA[ 
                        <p>Initialize a coverflow specifying whether to render a category menu using options.</p>
                        <pre>
                            var myCoverflow = $(".selector").coverflow({ categories: { enabled: true, renderTitles: false } });
                        </pre>
                        <p>Get whether to render a category menu after initialization.</p>
                        <pre>
                            var categoriesRenderTitles = myCoverflow.coverflow("option", "categories").renderTitles;
                        </pre>
                        ]]>
                    </Example>
                </Option>
                <Option Name="rememberLastCover" Type="Boolean" Default="true">
                    <Desc>When switching categories, the current set of covers is removed and the new ones are added. When switching back to a category that has been previously viewed, this value selects the same cover that was selected before navigating away from the category. If this value is false, the first cover in the set of covers for a category is always selected when switching categories.</Desc>
                    <Example>
                        <![CDATA[ 
                        <p>Initialize a coverflow specifying whether to "remember" the selected cover in each category using options.</p>
                        <pre>
                            var myCoverflow = $(".selector").coverflow({ categories: { enabled: true, rememberLastCover: false } });
                        </pre>
                        <p>Get whether to "remember" the selected cover in each category after initialization.</p>
                        <pre>
                            var categoriesRememberLastCover = myCoverflow.coverflow("option", "categories").rememberLastCover;
                        </pre>
                        ]]>
                    </Example>
                </Option>
                <Option Name="delAnimationCount" Type="Number" Default="4">
                    <Desc>The number of covers that animate out when switching categories. The higher this number is, the greater the likelyhood for performance issues. However leaving it too low can be distracting as covers will change instantly in a flash.</Desc>
                    <Example>
                        <![CDATA[ 
                        <p>Initialize a coverflow specifying the number of covers that animate out when switching categories using options.</p>
                        <pre>
                            var myCoverflow = $(".selector").coverflow({ categories: { enabled: true, delAnimationCount: 10 } });
                        </pre>
                        <p>Get the number of covers that animate out when switching categories after initialization.</p>
                        <pre>
                            var categoriesDelAnimationCount = myCoverflow.coverflow("option", "categories").delAnimationCount;
                        </pre>
                        ]]>
                    </Example>
                </Option>
                <Option Name="addAnimationCount" Type="Number" Default="4">
                    <Desc>The number of covers that animate in when switching categories. The higher this number is, the greater the likelyhood for performance issues. However leaving it too low can be distracting as covers will change instantly in a flash.</Desc>
                    <Example>
                        <![CDATA[ 
                        <p>Initialize a coverflow specifying the number of covers that animate in when switching categories using options.</p>
                        <pre>
                            var myCoverflow = $(".selector").coverflow({ categories: { enabled: true, addAnimationCount: 10 } });
                        </pre>
                        <p>Get the number of covers that animate in when switching categories after initialization.</p>
                        <pre>
                            var categoriesAddAnimationCount = myCoverflow.coverflow("option", "categories").addAnimationCount;
                        </pre>
                        ]]>
                    </Example>
                </Option>
            </Section>
            <Section Name="Autoplay">
                <Option Name="enabled" Type="Boolean" Default="false">
                    <Desc>Turns autoplay on and off.</Desc>
                    <Example>
                        <![CDATA[ 
                        <p>Initialize a coverflow specifying whether to automatically play using options.</p>
                        <pre>
                            var myCoverflow = $(".selector").coverflow({ autoplay: { enabled: true } });
                        </pre>
                        <p>Get whether to automatically play after initialization.</p>
                        <pre>
                            var autoplayEnabled = myCoverflow.coverflow("option", "autoplay").enabled;
                        </pre>
                        ]]>
                    </Example>
                </Option>
                <Option Name="interval" Type="Number" Default="3">
                    <Desc>The number of seconds to wait before flipping to the next cover on autoplay.</Desc>
                    <Example>
                        <![CDATA[ 
                        <p>Initialize a coverflow specifying the autoplay flip interval using options.</p>
                        <pre>
                            var myCoverflow = $(".selector").coverflow({ autoplay: { enabled: true, interval: 1 } });
                        </pre>
                        <p>Get the autoplay flip interval option after initialization.</p>
                        <pre>
                            var autoplayInterval = myCoverflow.coverflow("option", "autoplay").interval;
                        </pre>
                        ]]>
                    </Example>
                </Option>
                <Option Name="pauseOnMouseenter" Type="Boolean" Default="true">
                    <Desc>Pauses autoplay when the user positions the mouse over the coverflow. This prevents the autoplay from flipping away from a cover they might be interested in.</Desc>
                    <Example>
                        <![CDATA[ 
                        <p>Initialize a coverflow specifying whether to pause autoplay on mouse enter using options.</p>
                        <pre>
                            var myCoverflow = $(".selector").coverflow({ autoplay: { enabled: true, pauseOnMouseenter: false } });
                        </pre>
                        <p>Get whether to pause autoplay on mouse enter after initialization.</p>
                        <pre>
                            var pauseAutoplayOnMouseenter = myCoverflow.coverflow("option", "autoplay").pauseOnMouseenter;
                        </pre>
                        ]]>
                    </Example>
                </Option>
                <Option Name="playsPerCategory" Type="Number" Default="3">
                    <Desc>When both autoplay and categories are enabled, autoplay will cycle through them. This value determines how many cover flips will play before the next category is loaded. If the end of a set of covers in a category is reached before this value is met, the next category will be loaded after rewinding the set. This way you can set this value to an arbitrarily high number if you would like coverflow to flip through each cover in each category before changing catagories.</Desc>
                    <Example>
                        <![CDATA[ 
                        <p>Initialize a coverflow specifying the number autoplay flips before changing category using options.</p>
                        <pre>
                            var myCoverflow = $(".selector").coverflow({ autoplay: { enabled: true, playsPerCategory: 1 }, categories: { enabled: true } });
                        </pre>
                        <p>Get the number autoplay flips before changing category after initialization.</p>
                        <pre>
                            var autoplayPlaysPerCategory = myCoverflow.coverflow("option", "autoplay").playsPerCategory;
                        </pre>
                        ]]>
                    </Example>
                </Option>
            </Section>
            <Section Name="Slider">
                <Option Name="enabled" Type="Boolean" Default="true">
                    <Desc>Turns the slider on and off.</Desc>
                    <Example>
                        <![CDATA[ 
                        <p>Initialize a coverflow specifying whether to show the slider using options.</p>
                        <pre>
                            var myCoverflow = $(".selector").coverflow({ slider: { enabled: false } });
                        </pre>
                        <p>Get whether to show the slider after initialization.</p>
                        <pre>
                            var sliderEnabled = myCoverflow.coverflow("option", "slider").enabled;
                        </pre>
                        ]]>
                    </Example>
                </Option>
                <Option Name="width" Type="Number" Default="80">
                    <Desc>The width of the slider as a percentage of the coverflow's width.</Desc>
                    <Example>
                        <![CDATA[ 
                        <p>Initialize a coverflow specifying the width of the slider using options.</p>
                        <pre>
                            var myCoverflow = $(".selector").coverflow({ slider: { width: 50 } });
                        </pre>
                        <p>Get the width of the slider after initialization.</p>
                        <pre>
                            var sliderWidth = myCoverflow.coverflow("option", "slider").width;
                        </pre>
                        ]]>
                    </Example>
                </Option>
            </Section>
        </Section>
    </Options>
    <Events>
        <Event Name="pt.coverclick">
            <Desc>This event is triggered when any cover is clicked on.</Desc>
            <Example>
                <![CDATA[ 
                $(".selector").bind("pt.coverclick", function (event, data) {
                    // Runs when any cover is clicked.
                });
                ]]>
            </Example>
        </Event>
        <Event Name="pt.covermouseenter">
            <Desc>This event is triggered when the mouse pointer is moved over any cover.</Desc>
            <Example>
                <![CDATA[ 
                $(".selector").bind("pt.covermouseenter", function (event, data) {
                    // Runs when the mouse pointer is moved over any cover.
                });
                ]]>
            </Example>
        </Event>
        <Event Name="pt.covermouseleave">
            <Desc>This event is triggered when the mouse pointer is moved off of any cover.</Desc>
            <Example>
                <![CDATA[ 
                $(".selector").bind("pt.covermouseleave", function (event, data) {
                    // Runs when the mouse pointer is moved off of any cover.
                });
                ]]>
            </Example>
        </Event>
        <Event Name="pt.coverflowselectedcoverclick">
            <Desc>This event is triggered when the center "selected" cover is clicked on.</Desc>
            <Example>
                <![CDATA[ 
                $(".selector").bind("pt.coverflowselectedcoverclick", function (event, data) {
                    // Runs when the center "selected" cover is clicked on.
                });
                ]]>
            </Example>
        </Event>
        <Event Name="pt.coverflowbackgroundcoverclick">
            <Desc>This event is triggered when any cover other than the center "selected" cover is clicked on.</Desc>
            <Example>
                <![CDATA[ 
                $(".selector").bind("pt.coverflowbackgroundcoverclick", function (event, data) {
                    // Runs when any cover other than the center "selected" cover is clicked on.
                });
                ]]>
            </Example>
        </Event>
        <Event Name="pt.coverflowmouseenter">
            <Desc>This event is triggered when the mouse pointer is moved over the coverflow or any cover.</Desc>
            <Example>
                <![CDATA[ 
                $(".selector").bind("pt.coverflowmouseenter", function (event, data) {
                    // Runs when the mouse pointer is moved over the coverflow or any cover.
                });
                ]]>
            </Example>
        </Event>
        <Event Name="pt.coverflowmouseleave">
            <Desc>This event is triggered when the mouse pointer is moved off of the coverflow or any cover.</Desc>
            <Example>
                <![CDATA[ 
                $(".selector").bind("pt.coverflowmouseleave", function (event, data) {
                    // Runs when the mouse pointer is moved off of the coverflow or any cover.
                });
                ]]>
            </Example>
        </Event>
        <Event Name="pt.coverflowimageadded">
            <Desc>This event is triggered when the "addImage" API method is called.</Desc>
            <Example>
                <![CDATA[ 
                var myCoverflow = $(".selector").coverflow();
                var imageToAdd = $("<img src='#' />");
                $(".selector").bind("pt.coverflowimageadded", function (event, data) {
                    // Runs when the "addImage" API method is called.
                });
                // Invoke addImage on element click.
                $(".selector2").click(function () {
                    myCoverflow.coverflow("addImage", imageToAdd);
                });
                ]]>
            </Example>
        </Event>
        <Event Name="pt.coverflowimageremoved">
            <Desc>This event is triggered when the "removeImage" API method is called.</Desc>
            <Example>
                <![CDATA[ 
                var myCoverflow = $(".selector").coverflow();
                $(".selector").bind("pt.coverflowimageremoved", function (event, data) {
                    // Runs when the "removeImage" API method is called.
                });
                // Invoke removeImage on element click.
                $(".selector2").click(function () {
                    myCoverflow.coverflow("removeImage");
                });
                ]]>
            </Example>
        </Event>
        <Event Name="pt.coverflowplay">
            <Desc>This event is triggered when the "play" API method is called.</Desc>
            <Example>
                <![CDATA[ 
                var myCoverflow = $(".selector").coverflow();
                $(".selector").bind("pt.coverflowplay", function (event, data) {
                    // Runs when the "play" API method is called.
                });
                // Invoke play on element click.
                $(".selector2").click(function () {
                    myCoverflow.coverflow("play");
                });
                ]]>
            </Example>
        </Event>
        <Event Name="pt.coverflowpause">
            <Desc>This event is triggered when the "pause" API method is called.</Desc>
            <Example>
                <![CDATA[ 
                var myCoverflow = $(".selector").coverflow({ autoplay: { enabled: true } });
                $(".selector").bind("pt.coverflowpause", function (event, data) {
                    // Runs when the "pause" API method is called.
                });
                // Invoke pause on element click.
                $(".selector2").click(function () {
                    myCoverflow.coverflow("pause");
                });
                ]]>
            </Example>
        </Event>
        <Event Name="pt.coverflowtoggleplay">
            <Desc>This event is triggered when the "togglePlay" API method is called.</Desc>
            <Example>
                <![CDATA[ 
                var myCoverflow = $(".selector").coverflow();
                $(".selector").bind("pt.coverflowtoggleplay", function (event, data) {
                    // Runs when the "togglePlay" API method is called.
                });
                // Invoke togglePlay on element click.
                $(".selector2").click(function () {
                    myCoverflow.coverflow("togglePlay");
                });
                ]]>
            </Example>
        </Event>
        <Event Name="pt.coverflownextcategory">
            <Desc>This event is triggered when the "nextCategory" API method is called.</Desc>
            <Example>
                <![CDATA[ 
                var myCoverflow = $(".selector").coverflow({ categories: { enabled: true } });
                $(".selector").bind("pt.coverflownextcategory", function (event, data) {
                    // Runs when the "nextCategory" API method is called.
                });
                // Invoke nextCategory on element click.
                $(".selector2").click(function () {
                    myCoverflow.coverflow("nextCategory");
                });
                ]]>
            </Example>
        </Event>
        <Event Name="pt.coverflowprevcategory">
            <Desc>This event is triggered when the "prevCover" API method is called.</Desc>
            <Example>
                <![CDATA[ 
                var myCoverflow = $(".selector").coverflow({ categories: { enabled: true } });
                $(".selector").bind("pt.coverflowprevcategory", function (event, data) {
                    // Runs when the "prevCover" API method is called.
                });
                // Invoke prevCover on element click.
                $(".selector2").click(function () {
                    myCoverflow.coverflow("prevCover");
                });
                ]]>
            </Example>
        </Event>
        <Event Name="pt.coverflowgotocategory">
            <Desc>This event is triggered when the "gotoCategory" API method is called. The menu rendered by the "renderTitles" option calls gotoCategory.</Desc>
            <Example>
                <![CDATA[ 
                var myCoverflow = $(".selector").coverflow({ categories: { enabled: true } });
                $(".selector").bind("pt.coverflowgotocategory", function (event, data) {
                    // Runs when the "gotoCategory" API method is called.
                });
                // Invoke gotoCategory on element click.
                $(".selector2").click(function () {
                    myCoverflow.coverflow("gotoCategory", "Category Name");
                });
                ]]>
            </Example>
        </Event>
        <Event Name="pt.coverflownextcover">
            <Desc>This event is triggered when the "nextCover" API method is called.</Desc>
            <Example>
                <![CDATA[ 
                var myCoverflow = $(".selector").coverflow();
                $(".selector").bind("pt.coverflownextcover", function (event, data) {
                    // Runs when the "nextCover" API method is called.
                });
                // Invoke nextCover on element click.
                $(".selector2").click(function () {
                    myCoverflow.coverflow("nextCover");
                });
                ]]>
            </Example>
        </Event>
        <Event Name="pt.coverflowprevcover">
            <Desc>This event is triggered when the "prevCover" API method is called.</Desc>
            <Example>
                <![CDATA[ 
                var myCoverflow = $(".selector").coverflow();
                $(".selector").bind("pt.coverflowprevcover", function (event, data) {
                    // Runs when the "prevCover" API method is called.
                });
                // Invoke prevCover on element click.
                $(".selector2").click(function () {
                    myCoverflow.coverflow("prevCover");
                });
                ]]>
            </Example>
        </Event>
        <Event Name="pt.coverflowgotocover">
            <Desc>This event is triggered when the "gotoCover" API method is called.</Desc>
            <Example>
                <![CDATA[ 
                var myCoverflow = $(".selector").coverflow();   
                $(".selector").bind("pt.coverflowgotocover", function (event, data) {
                    // Runs when the "gotoCover" API method is called.
                });
                // Invoke gotoCover on element click.
                $(".selector2").click(function () {
                    myCoverflow.coverflow("gotoCover", 5);
                });
                ]]>
            </Example>
        </Event>
        <Event Name="pt.coverflowslide">
            <Desc>This event is triggered when the slider is used.</Desc>
            <Example>
                <![CDATA[ 
                $(".selector").bind("pt.coverflowslide", function (event, data) {
                    // Runs when the slider is used.
                });
                ]]>
            </Example>
        </Event>
    </Events>
    <Methods>
        <Method Name="destroy">
            <Sig>.coverflow("destroy")</Sig>
            <Desc>Remove the coverflow completely and return the element back to its previous state.</Desc>
            <Example>
                <![CDATA[
                var myCoverflow = $(".selector").coverflow();
                // Invoke destroy on element click.
                $(".selector2").click(function () {
                    myCoverflow.coverflow("destroy");
                });
                ]]>
            </Example>
        </Method>
        <Method Name="play">
            <Sig>.coverflow("play")</Sig>
            <Desc>Begin autoplay.</Desc>
            <Example>
                <![CDATA[
                var myCoverflow = $(".selector").coverflow();
                // Invoke play on element click.
                $(".selector2").click(function () {
                    myCoverflow.coverflow("play");
                });
                ]]>
            </Example>
        </Method>
        <Method Name="pause">
            <Sig>.coverflow("pause")</Sig>
            <Desc>Pause autoplay.</Desc>
            <Example>
                <![CDATA[
                var myCoverflow = $(".selector").coverflow({ autoplay: { enabled: true} });
                // Invoke pause on element click.
                $(".selector2").click(function () {
                    myCoverflow.coverflow("pause");
                });
                ]]>
            </Example>
        </Method>
        <Method Name="togglePlay">
            <Sig>.coverflow("togglePlay")</Sig>
            <Desc>Pauses autoplay if playing; begins autoplay if paused.</Desc>
            <Example>
                <![CDATA[
                var myCoverflow = $(".selector").coverflow();
                // Invoke togglePlay on element click.
                $(".selector2").click(function () {
                    myCoverflow.coverflow("togglePlay");
                });
                ]]>
            </Example>
        </Method>
        <Method Name="isPlaying">
            <Sig>.coverflow("isPlaying")</Sig>
            <Desc>Detects if autoplay is running.</Desc>
            <Example>
                <![CDATA[
                var myCoverflow = $(".selector").coverflow();
                // Invoke isPlaying on element click.
                $(".selector2").click(function () {
                    var isPlaying = myCoverflow.coverflow("isPlaying");
                    if (isPlaying) {
                        // This code is executed only if autoplay is running.
                    }
                });
                ]]>
            </Example>
        </Method>
        <Method Name="nextCover">
            <Sig>.coverflow("nextCover")</Sig>
            <Desc>Advances the coverflow to the next cover.</Desc>
            <Example>
                <![CDATA[
                var myCoverflow = $(".selector").coverflow();
                // Invoke nextCover on element click.
                $(".selector2").click(function () {
                    myCoverflow.coverflow("nextCover");
                });
                ]]>
            </Example>
        </Method>
        <Method Name="prevCover">
            <Sig>.coverflow("prevCover")</Sig>
            <Desc>Moves the coverflow back to the previous cover.</Desc>
            <Example>
                <![CDATA[
                var myCoverflow = $(".selector").coverflow();
                // Invoke prevCover on element click.
                $(".selector2").click(function () {
                    myCoverflow.coverflow("prevCover");
                });
                ]]>
            </Example>
        </Method>
        <Method Name="gotoCover">
            <Sig>.coverflow("gotoCover", index)</Sig>
            <Desc>Moves the coverflow back to the previous cover.</Desc>
            <Example>
                <![CDATA[
                var myCoverflow = $(".selector").coverflow();
                // Invoke gotoCover on element click.
                $(".selector2").click(function () {
                    myCoverflow.coverflow("gotoCover", 5);
                });
                ]]>
            </Example>
        </Method>
        <Method Name="nextCategory">
            <Sig>.coverflow("nextCategory")</Sig>
            <Desc>Switches to the next category.</Desc>
            <Example>
                <![CDATA[
                var myCoverflow = $(".selector").coverflow({ categories: { enabled: true } });
                // Invoke nextCategory on element click.
                $(".selector2").click(function () {
                    myCoverflow.coverflow("nextCategory");
                });
                ]]>
            </Example>
        </Method>
        <Method Name="prevCategory">
            <Sig>.coverflow("prevCategory")</Sig>
            <Desc>Switches to the previous category.</Desc>
            <Example>
                <![CDATA[
                var myCoverflow = $(".selector").coverflow({ categories: { enabled: true } });
                // Invoke prevCategory on element click.
                $(".selector2").click(function () {
                    myCoverflow.coverflow("prevCategory");
                });
                ]]>
            </Example>
        </Method>
        <Method Name="gotoCategory">
            <Sig>.coverflow("gotoCategory", categoryName)</Sig>
            <Desc>Switches to the selected category.</Desc>
            <Example>
                <![CDATA[
                var myCoverflow = $(".selector").coverflow({ categories: { enabled: true } });
                // Invoke gotoCategory on element click.
                $(".selector2").click(function () {
                    myCoverflow.coverflow("gotoCategory", "My Category");
                });
                ]]>
            </Example>
        </Method>
        <Method Name="addImage">
            <Sig>.coverflow("addImage", image, [animated])</Sig>
            <Desc>Adds an image from the end of a cover set. The optional 'animated' parameter defaults to true.</Desc>
            <Example>
                <![CDATA[
                var myCoverflow = $(".selector").coverflow();
                var imageToAdd = $("<img src='#' />");
                // Invoke addImage on element click.
                $(".selector2").click(function () {
                    myCoverflow.coverflow("addImage", imageToAdd);
                });
                ]]>
            </Example>
        </Method>
        <Method Name="removeImage">
            <Sig>.coverflow("removeImage", [animated])</Sig>
            <Desc>Removes an image from the front of a cover set. The optional 'animated' parameter defaults to true.</Desc>
            <Example>
                <![CDATA[
                var myCoverflow = $(".selector").coverflow();
                // Invoke removeImage on element click.
                $(".selector2").click(function () {
                    myCoverflow.coverflow("removeImage");
                });
                ]]>
            </Example>
        </Method>
    </Methods>
    <License>
        Copyright (c) 2012 Planet Telex Inc. all rights reserved.

        Licensed under the Apache License, Version 2.0 (the "License");
        you may not use this file except in compliance with the License.
        You may obtain a copy of the License at

                http://www.apache.org/licenses/LICENSE-2.0

        Unless required by applicable law or agreed to in writing, software
        distributed under the License is distributed on an "AS IS" BASIS,
        WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
        See the License for the specific language governing permissions and
        limitations under the License.
    </License>
</Documentation>